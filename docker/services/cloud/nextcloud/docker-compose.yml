version: '2.1'

networks:
  docker0:
    external:
      name: docker0

volumes:
  nextcloud:
  db:

services:
  db:
    image: postgres:12
    restart: always
    volumes:
      - /tank0/apps/cloud/nextcloud/db:/var/lib/postgresql/data
    env_file:
      - db.env

  redis:
    image: redis:rc-alpine
    restart: always
    # Only for the version 3.
    #sysctls:
    #  net.core.somaxconn: '511'

#  # Full-text search engine.
#  solr:
#    image: solr:6-alpine
#    restart: always
#    container_name: solr
#    volumes:
#      - /tank0/apps/cloud/nextcloud/solr:/opt/solr/server/solr/mycores:Z
#    entrypoint:
#      - docker-entrypoint.sh
#      - solr-precreate
#      - nextant
#

  app:
    #image: nextcloud:16-fpm
    build: ./app
    volumes:
      # Main folder, needed for updating
      - /tank0/apps/cloud/nextcloud/html:/var/www/html
      - /tank0/user_data:/user_data0
      - /tank1/user_data:/user_data1
    networks:
      - default
      # Need for LDAP.
      - docker0
    restart: always
    env_file:
      - db.env
    environment:
      - POSTGRES_HOST=db
      - NEXTCLOUD_TRUSTED_DOMAINS="NAS.cloudns.cc"
      - PHP_MEMORY_LIMIT=512M
    depends_on:
      - db
      - redis

  cron:
    #image: nextcloud:16-fpm
    build: ./app
    restart: always
    volumes:
      - /tank0/apps/cloud/nextcloud/html:/var/www/html
    networks:
      - default
    entrypoint: /cron.sh
    depends_on:
      - db
      - redis

  web:
    build: ./web
    restart: always
    expose:
      - 80
    volumes:
      - /tank0/apps/cloud/nextcloud/html:/var/www/html:ro
    volumes_from:
      - app
    networks:
      - default
      - docker0
    environment:
      - VIRTUAL_HOST=cloud.*
      - VIRTUAL_PORT=80
      - VIRTUAL_PROTO=http
      - CERT_NAME=NAS.cloudns.cc
    depends_on:
      - app
